{"version":3,"sources":["assests/mist.jpg","assests/clearday.jpg","assests/background.jpg","assests/haze.jpg","assests/cloudy.jpg","assests/rainy.jpg","assests/snowy.jpg","assests/dusty.jpg","assests/drizzle.jpg","assests/fog.jpg","assests/smoke.jpg","assests/sandy.jpg","assests/ash.jpg","assests/squall.jpg","assests/tornado.jpg","assests/thunderstorm.jpg","components/WeatherLayout2.jsx","components/WeatherLayout.jsx","App.js","index.js"],"names":["module","exports","useStyles","makeStyles","Text","fontSize","fontWeight","margin","WeatherLayout2","props","classes","defaults","style","width","Box","display","justifyContent","marginTop","icon","color","size","animate","description","Divider","variant","orientation","backgroundColor","className","IconButton","Tooltip","title","currhome","arrow","onClick","home","type","placeholder","onChange","mkey","value","keyword","id","skeyword","location","alignItems","name","country","src","smallIcons","flexGrow","Temperature","humidity","visibility","wind","feels","root","background","backgroundImage","Background","height","backgroundRepeat","backgroundSize","card","alignContent","justify","overflow","backgroundLeft","mist","objectFit","TimeSize","WeatherLayout","useState","wImage","setWImage","theme","useTheme","my_home","localStorage","getItem","query","setQuery","mirror_query","setMirrorQuery","current_home","setCurrHome","setIcon","screenMD","useMediaQuery","breakpoints","down","temp","weather_description","min_temp","max_temp","wind_speed","undefined","weather","setWeather","useEffect","getLocation","get_Weather","cloudy","rainy","snowy","drizzle","dusty","haze","fog","smoke","sandy","ash","squall","torndao","thunderstorm","clearday","e","a","fetch","api_Call","json","response","resp_code","parseInt","cod","alert","convertString","sys","calcCelui","main","temp_min","temp_max","speed","feels_like","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","lat","lon","hasOwnProperty","address","city","Math","floor","phrase","returnString","replace","Grid","container","Card","overflowY","direction","Hidden","only","item","lg","md","CardContent","paddingRight","Typography","open","placement","setItem","format","interval","ticking","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","loadweather","q","target","App","createMuiTheme","typography","fontFamily","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.f795676a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mist.4615eb8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clearday.423447b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.75e0f8ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/haze.767b205f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.bbd925ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.62215a7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.6b87759a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dusty.72123cfe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.a7b89a72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fog.4aad9ad8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/smoke.76b80e99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sandy.4bcc8cc0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ash.21d711e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/squall.952566fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tornado.1d3d018f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.59158a9b.jpg\";","import React from \"react\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MyLocationIcon from \"@material-ui/icons/MyLocation\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  Text: { fontSize: \"1.3em\", fontWeight: 400, margin: \"8px 0 3px 30px\" },\r\n}));\r\nfunction WeatherLayout2(props) {\r\n  const classes = useStyles();\r\n  const defaults = {\r\n    color: \"#fff\",\r\n    size: 120,\r\n    animate: true,\r\n  };\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Box display=\"flex\" justifyContent=\"center\" style={{ marginTop: \"40px\" }}>\r\n        <ReactAnimatedWeather\r\n          icon={props.icon}\r\n          color={defaults.color}\r\n          size={defaults.size}\r\n          animate={defaults.animate}\r\n        />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        style={{ marginTop: \"20px\", fontSize: \"3em\", fontWeight: \"bold\" }}\r\n      >\r\n        {props.description}\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          marginTop: \"8px\",\r\n        }}\r\n      />\r\n      <Box style={{ marginTop: \"8px\" }} className=\"search-box\">\r\n        <div className=\"img-box\">\r\n          {\" \"}\r\n          <IconButton>\r\n            <Tooltip title={props.currhome} arrow>\r\n              <HomeIcon style={{ color: \"white\" }} onClick={props.home} />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-bar\"\r\n          placeholder=\"Search any city\"\r\n          onChange={props.mkey}\r\n          value={props.keyword}\r\n          // name=\"city\"\r\n        />\r\n        <div className=\"img-box\">\r\n          {\" \"}\r\n          <IconButton color=\"primary\">\r\n            <Tooltip title=\"Search\" arrow>\r\n              <SearchIcon\r\n                style={{ color: \"white\" }}\r\n                id={props.keyword}\r\n                onClick={props.skeyword}\r\n              />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"img-box\">\r\n          {\" \"}\r\n          <IconButton>\r\n            <Tooltip title=\"Weather at current city\" arrow>\r\n              <MyLocationIcon\r\n                style={{ color: \"white\" }}\r\n                onClick={props.location}\r\n              />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </div>\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        className={classes.Text}\r\n      >\r\n        {props.name},{props.country}{\" \"}\r\n        <img\r\n          src={`https://openweathermap.org/img/wn/${props.smallIcons}.png`}\r\n        />\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        className={classes.Text}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box flexGrow={1}>Temperature </Box>\r\n        <Box flexGrow={1}>\r\n          {props.Temperature}°c ({props.description}){\" \"}\r\n        </Box>\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          marginTop: \"2px\",\r\n        }}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        className={classes.Text}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box flexGrow={1}> Humidity </Box>\r\n        <Box flexGrow={1}>{props.humidity}%</Box>\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          marginTop: \"2px\",\r\n        }}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        className={classes.Text}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box flexGrow={1}> Visibility </Box>\r\n        <Box flexGrow={1}>{props.visibility} mi</Box>\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          marginTop: \"2px\",\r\n        }}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        className={classes.Text}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box flexGrow={1}> Wind Speed </Box>\r\n        <Box flexGrow={1}>{props.wind} km/h</Box>\r\n      </Box>\r\n      <Divider\r\n        variant=\"middle\"\r\n        orientation=\"horizontal\"\r\n        style={{\r\n          backgroundColor: \"#fff\",\r\n          marginTop: \"2px\",\r\n        }}\r\n      />\r\n      <Box\r\n        display=\"flex\"\r\n        className={classes.Text}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Box flexGrow={1}> Feels Like </Box>\r\n        <Box flexGrow={1}>{props.feels}°c</Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherLayout2;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Typography, useMediaQuery } from \"@material-ui/core\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Background from \"../assests/background.jpg\";\r\nimport haze from \"../assests/haze.jpg\";\r\nimport cloudy from \"../assests/cloudy.jpg\";\r\nimport rainy from \"../assests/rainy.jpg\";\r\nimport snowy from \"../assests/snowy.jpg\";\r\nimport dusty from \"../assests/dusty.jpg\";\r\nimport drizzle from \"../assests/drizzle.jpg\";\r\nimport fog from \"../assests/fog.jpg\";\r\nimport mist from \"../assests/mist.jpg\";\r\nimport smoke from \"../assests/smoke.jpg\";\r\nimport sandy from \"../assests/sandy.jpg\";\r\nimport ash from \"../assests/ash.jpg\";\r\nimport squall from \"../assests/squall.jpg\";\r\nimport torndao from \"../assests/tornado.jpg\";\r\nimport thunderstorm from \"../assests/thunderstorm.jpg\";\r\nimport clearday from \"../assests/clearday.jpg\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Clock from \"react-live-clock\";\r\nimport RightLayout from \"./WeatherLayout2\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  background: {\r\n    backgroundImage: `url(${Background})`,\r\n    height: \"100vh\",\r\n    width: \"100%\",\r\n\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n  },\r\n  card: {\r\n    alignContent: \"center\",\r\n    justify: \"center\",\r\n    width: \"65%\",\r\n    height: \"85%\",\r\n    // overflowY: screenMD ? \"auto\" : \"hidden\",\r\n    overflow: \"hidden\",\r\n    // borderRadius: \"10px\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.73)\",\r\n    color: \"#fff\",\r\n  },\r\n  backgroundLeft: {\r\n    backgroundImage: `url(${mist})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    height: \"-webkit-fill-available\",\r\n    objectFit: \"cover\",\r\n    width: \"100vw\",\r\n  },\r\n  TimeSize: {\r\n    fontSize: \"1.5em\",\r\n    fontWeight: \"bold\",\r\n    marginTop: \"25px\",\r\n  },\r\n}));\r\nfunction WeatherLayout() {\r\n  const [wImage, setWImage] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  const classes = useStyles();\r\n  // var query = \"bangalore\";\r\n  let my_home =\r\n    localStorage.getItem(\"my_home\") !== null\r\n      ? localStorage.getItem(\"my_home\")\r\n      : \"\";\r\n  const [query, setQuery] = useState(my_home);\r\n  // localStorage.setItem(\"my_home\",)\r\n  const [mirror_query, setMirrorQuery] = useState(\"\");\r\n  const [current_home, setCurrHome] = useState(my_home);\r\n  const [error, setError] = useState(\"\");\r\n  const [icon, setIcon] = useState(\r\n    \"CLEAR_DAY\"\r\n    //   {\r\n    //   icon: \"CLEAR_DAY\",\r\n    // }\r\n  );\r\n  const screenMD = useMediaQuery(theme.breakpoints.down(\"md\"));\r\n  const [weather, setWeather] = useState({\r\n    country: null,\r\n    name: null,\r\n    temp: null,\r\n    weather_description: \"\",\r\n    min_temp: null,\r\n    max_temp: null,\r\n    wind_speed: null,\r\n    feels: null,\r\n    humidity: null,\r\n    visibility: null,\r\n\r\n    // lat: null,\r\n    // lon: null,\r\n    smallIcons: undefined,\r\n  });\r\n  useEffect(() => {\r\n    getLocation();\r\n    // get_Weather();\r\n    // getCurrentLocation();\r\n    // timerID = setInterval(() => get_Weather(weather.lat, weather.lon), 600000);\r\n    // clearInterval(timerID);\r\n  }, []);\r\n  useEffect(() => {\r\n    get_Weather();\r\n    // getCurrentLocation();\r\n    // timerID = setInterval(() => get_Weather(weather.lat, weather.lon), 600000);\r\n    // clearInterval(timerID);\r\n  }, [query]);\r\n  useEffect(() => {\r\n    switch (weather.weather_description) {\r\n      case \"Clouds\":\r\n        setIcon({ icon: \"CLOUDY\" });\r\n        setWImage(cloudy);\r\n        break;\r\n      case \"Rain\":\r\n        setIcon({ icon: \"RAIN\" });\r\n        setWImage(rainy);\r\n        break;\r\n      case \"Snow\":\r\n        setIcon({ icon: \"SNOW\" });\r\n        setWImage(snowy);\r\n        break;\r\n      case \"Drizzle\":\r\n        setIcon({ icon: \"SLEET\" });\r\n        setWImage(drizzle);\r\n        break;\r\n      case \"Dust\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(dusty);\r\n        break;\r\n      case \"Haze\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(haze);\r\n        break;\r\n      case \"Fog\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(fog);\r\n        break;\r\n      case \"Smoke\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(smoke);\r\n        break;\r\n      case \"Sand\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(sandy);\r\n        break;\r\n      case \"Ash\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(ash);\r\n        break;\r\n      case \"Squall\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(squall);\r\n        break;\r\n      case \"Mist\":\r\n        setIcon({ icon: \"FOG\" });\r\n        setWImage(mist);\r\n        break;\r\n      case \"Tornado\":\r\n        setIcon({ icon: \"WIND\" });\r\n        setWImage(torndao);\r\n        break;\r\n      case \"Thunderstorm\":\r\n        setIcon({ icon: \"RAIN\" });\r\n        setWImage(thunderstorm);\r\n        break;\r\n      case \"Clear\":\r\n        setIcon({ icon: \"CLEAR_DAY\" });\r\n        setWImage(clearday);\r\n        break;\r\n      default:\r\n        setIcon({ icon: \"CLEAR_DAY\" });\r\n        setWImage(clearday);\r\n    }\r\n  }, [weather]);\r\n  const Api_Key = \"b30252d5438a93f2f32926b3a20905c3\";\r\n\r\n  const get_Weather = async (e) => {\r\n    if (query != \"\") {\r\n      const api_Call = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${Api_Key}`\r\n        // `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=${Api_Key}`\r\n      );\r\n      const response = await api_Call.json();\r\n\r\n      let resp_code = parseInt(response.cod);\r\n\r\n      if (!(resp_code >= 400 && resp_code <= 499)) {\r\n        setQuery(\"\");\r\n        setWeather({\r\n          name: convertString(response.name),\r\n          country: response.sys.country,\r\n          temp: calcCelui(response.main.temp),\r\n          weather_description: response.weather[0].main,\r\n          min_temp: calcCelui(response.main.temp_min),\r\n          max_temp: calcCelui(response.main.temp_max),\r\n          wind_speed: response.wind.speed,\r\n          feels: calcCelui(response.main.feels_like),\r\n          humidity: response.main.humidity,\r\n          smallIcons: response.weather[0].icon,\r\n          visibility: response.visibility,\r\n        });\r\n      } else if (resp_code == 404) {\r\n        alert(\"No city found!\");\r\n      } else {\r\n        alert(\"Something Went Wrong, try again!\");\r\n      }\r\n\r\n      console.log(response, \"asfiopu\");\r\n      // console.log(weather.lat, \"latudu\");\r\n    }\r\n  };\r\n\r\n  const getLocation = async () => {\r\n    navigator.geolocation.getCurrentPosition(async function (position) {\r\n      console.log(\"Latitude is :\", position.coords.latitude);\r\n      console.log(\"Longitude is :\", position.coords.longitude);\r\n      var lat = position.coords.latitude;\r\n      var lon = position.coords.longitude;\r\n      console.log(lat, \"laaa\");\r\n      if (lat != \"\" && lon != \"\") {\r\n        const api_key1 = \"45d2893054feb7\";\r\n        const api_Call = await fetch(\r\n          `https://eu1.locationiq.com/v1/reverse.php?key=${api_key1}&lat=${lat}&lon=${lon}&format=json`\r\n        );\r\n        const response = await api_Call.json();\r\n        console.log(\"geo\", response);\r\n        if (\r\n          response.hasOwnProperty(\"address\") &&\r\n          response.address.hasOwnProperty(\"city\")\r\n        ) {\r\n          if (response.address.city != \"\") {\r\n            setQuery(response.address.city);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    if (weather.name === null) {\r\n      if (query === \"\") setQuery(\"Bangalore\");\r\n    } else {\r\n      alert(\"Something Went Wrong While fetching location!\");\r\n    }\r\n  };\r\n  const key = (q) => {\r\n    setQuery(q.target.id);\r\n  };\r\n  const mkey = (e) => {\r\n    setMirrorQuery(e.target.value);\r\n  };\r\n  const goHome = (e) => {\r\n    if (\r\n      localStorage.getItem(\"my_home\") !== null &&\r\n      localStorage.getItem(\"my_home\") !== \"\"\r\n    ) {\r\n      setQuery(localStorage.getItem(\"my_home\"));\r\n    }\r\n  };\r\n  const setHome = (e) => {\r\n    if (weather.name !== \"\" && weather.name !== undefined) {\r\n      localStorage.setItem(\"my_home\", weather.name);\r\n      setCurrHome(weather.name);\r\n    }\r\n  };\r\n  const calcCelui = (temp) => {\r\n    let cel = Math.floor(temp - 273.15);\r\n    return cel;\r\n  };\r\n\r\n  const maxminTemp = (min, max) => {\r\n    if (max && min) {\r\n      return (\r\n        <h3>\r\n          <span className=\"px-4\">{min}&deg;</span>\r\n          <span className=\"px-4\">{max}&deg;</span>\r\n        </h3>\r\n      );\r\n    }\r\n  };\r\n\r\n  const convertString = (phrase) => {\r\n    var returnString = phrase;\r\n    //Convert Characters\r\n    returnString = returnString.replace(\"ö\", \"o\");\r\n    returnString = returnString.replace(\"ç\", \"c\");\r\n    returnString = returnString.replace(\"ş\", \"s\");\r\n    returnString = returnString.replace(\"ı\", \"i\");\r\n    returnString = returnString.replace(\"ğ\", \"g\");\r\n    returnString = returnString.replace(\"ü\", \"u\");\r\n    returnString = returnString.replace(\"ū\", \"u\");\r\n\r\n    // if there are other invalid chars, convert them into blank spaces\r\n    // returnString = returnString.replace(/[^a-z0-9\\s-]/g, \"\");\r\n    // convert multiple spaces and hyphens into one space\r\n\r\n    // trims current string\r\n\r\n    // cuts string (if too long)\r\n\r\n    // add hyphens\r\n\r\n    return returnString;\r\n  };\r\n  // function getPosition(position) {\r\n  //   x.innerHTML =\r\n  //     \"Latitude: \" +\r\n  //     position.coords.latitude +\r\n  //     \"<br>Longitude: \" +\r\n  //     position.coords.longitude;\r\n  // }\r\n\r\n  // const getPosition = (options) => {\r\n  //   return new Promise(function (resolve, reject) {\r\n  //     navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  //   });\r\n  // };\r\n  // const getCurrentLocation = () => {\r\n  //   if (navigator.geolocation) {\r\n  //     getPosition()\r\n  //       //If user allow location service then will fetch data & send it to get-weather function.\r\n  //       .then((position) => {\r\n  //         get_Weather(position.coords.latitude, position.coords.longitude);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\r\n  //         get_Weather(28.67, 77.22);\r\n  //         alert(\r\n  //           \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\"\r\n  //         );\r\n  //       });\r\n  //   } else {\r\n  //     alert(\"Geolocation not available\");\r\n  //   }\r\n  // };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      //  direction=\"row\"\r\n      className={classes.background}\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n    >\r\n      <Card\r\n        className={classes.card}\r\n        style={{ overflowY: screenMD ? \"auto\" : \"hidden\" }}\r\n      >\r\n        <Grid container direction=\"row\">\r\n          <Hidden only={[\"sm\", \"xs\", \"md\"]}>\r\n            <Grid\r\n              item\r\n              container\r\n              className={classes.backgroundLeft}\r\n              style={{ backgroundImage: `url(${wImage})` }}\r\n              // alignItems=\"center\"\r\n              direction=\"column\"\r\n              // xl={5}\r\n              lg={7}\r\n              md={6}\r\n              // xs={6}\r\n            >\r\n              <CardContent>\r\n                {/* <Grid item>\r\n                <Grid\r\n                  container\r\n                  direction=\"column\" */}\r\n                {/* > */}\r\n\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"flex-end\"\r\n                  style={{ paddingRight: \"2em\", marginTop: \"2em\" }}\r\n                >\r\n                  {/* {weather.weather_description} */}\r\n\r\n                  <Typography variant=\"h3\">\r\n                    {weather.name},{weather.country}\r\n                  </Typography>\r\n                  <div className=\"img-box\">\r\n                    <IconButton>\r\n                      <Tooltip\r\n                        open={true}\r\n                        title=\"Set as home\"\r\n                        placement=\"right\"\r\n                        arrow\r\n                      >\r\n                        <LocationOnIcon\r\n                          style={{ color: \"white\" }}\r\n                          onClick={setHome}\r\n                        />\r\n                      </Tooltip>\r\n                    </IconButton>\r\n                  </div>\r\n\r\n                  {/* {maxminTemp(weather.min_temp, weather.max_temp)}\r\n                  <p>{weather.wind_speed}</p> */}\r\n                </Box>\r\n                {/* <Box\r\n                display=\"flex\"\r\n                justifyContent=\"flex-end\"\r\n                // p={1}\r\n                style={{ paddingRight: \"2em\" }}\r\n              >\r\n                <Typography variant=\"h3\">{weather.country}</Typography>\r\n              </Box> */}\r\n                <Box\r\n                  display=\"flex\"\r\n                  style={{ paddingRight: \"1em\", marginTop: \"20em\" }}\r\n\r\n                  // justifyContent=\"flex-end\"\r\n                >\r\n                  <Box flexGrow={1} className={classes.TimeSize}>\r\n                    <Box\r\n\r\n                    // flexGrow={1}\r\n                    >\r\n                      <Clock\r\n                        format=\"HH:mm:ss\"\r\n                        // className={classes.TimeSize}\r\n                        interval={1000}\r\n                        ticking={true}\r\n                      />\r\n                    </Box>\r\n                    {dateBuilder(new Date())}\r\n                  </Box>\r\n                  <Box\r\n                  // display=\"flex\"\r\n                  // justifyContent=\"flex-end\"\r\n                  // alignItems=\"flex-end\"\r\n                  // p={1}\r\n\r\n                  // alignContent=\"flex-end\"\r\n                  // bgcolor=\"red\"\r\n                  >\r\n                    <Typography variant=\"h1\">{weather.temp}&deg;c</Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Grid>\r\n          </Hidden>\r\n          <Grid\r\n            item\r\n            container\r\n            direction=\"row\"\r\n            // alignItems=\"flex-start\"\r\n            // justify=\"flex-start\"\r\n            // xl={7}\r\n            lg={5}\r\n            md={6}\r\n            // xs={6}\r\n          >\r\n            <RightLayout\r\n              icon={icon.icon}\r\n              description={weather.weather_description}\r\n              name={weather.name}\r\n              country={weather.country}\r\n              smallIcons={weather.smallIcons}\r\n              Temperature={weather.temp}\r\n              humidity={weather.humidity}\r\n              visibility={weather.visibility}\r\n              wind={weather.wind_speed}\r\n              loadweather={get_Weather}\r\n              keyword={mirror_query}\r\n              skeyword={key}\r\n              mkey={mkey}\r\n              location={getLocation}\r\n              home={goHome}\r\n              currhome={current_home}\r\n              feels={weather.feels}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default WeatherLayout;\r\n","import React from \"react\";\nimport CurrrentWeather from \"./components/WeatherLayout\";\n// import Hourly_weather from \"./components/HourlyForcast\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <CurrrentWeather />\n      {/* <Hourly_weather /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport \"fontsource-roboto\";\n\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: \"Oswald\",\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}